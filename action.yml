---
# yamllint disable rule:line-length
name: Actions Python
description: |
  Github Action to perform build, test , scan and generate Image for Python

  ## Permissions

  Add the following permissions to the job

  ```yaml
  permissions:
    id-token: write
    contents: read
  ```

  ## Usage

  ```yaml
      - name: Actions Python
        uses: variant-inc/actions-python@v2
        with:
          ecr_repository: 'demo/example'
          python-version: 3.10
  ```
inputs:
  dockerfile_dir_path:
    description: Directory Path to the dockerfile.
    required: false
    default: .
  ecr_repository:
    description: |
      ECR Repository Name.
      If this is empty, then container image will not be created.
    required: false
    default: ''
  cloud_region:
    description: >
      Region where the image will be created.
    default: us-east-2
    required: false
  python-version:
    description: |
      The python-version input is optional.
      If not supplied, the action will try to resolve the
      version from the default `.python-version` file.

      If the `.python-version` file doesn't exist Python or PyPy
      version from the PATH will be used.

      The default version of Python or PyPy in PATH varies
      between runners and can be changed unexpectedly
      so we recommend always setting Python version explicitly
      using the python-version inputs.
    required: false
runs:
  using: composite
  steps:
    - name: Setup Actions
      uses: variant-inc/actions-setup@v2

    - name: Sonar Setup
      id: sonar-setup
      uses: variant-inc/actions-collection/sonar-setup@v2

    - shell: bash
      run: |
        mkdir -p ./.github/workflows/actions-python/test
        cp -R ${{ github.action_path }}/test/* ./.github/workflows/actions-python/test/

    - name: Build & Test Python
      uses: ./.github/workflows/actions-python/test
      if: ${{ steps.sonar-setup.outputs.sonar_skip != 'True' }}
      with:
        python-version: ${{ inputs.python-version }}
        sonar_wait_flag: ${{ steps.sonar-setup.outputs.wait_flag }}

    - name: Sonar Coverage Check
      id: sonar-coverage-check
      uses: variant-inc/actions-collection/sonar-coverage-check@v2

    - name: Build and Push Image
      uses: variant-inc/actions-collection/build-push-image@v2
      if: ${{ inputs.ecr_repository != '' }}
      with:
        dockerfile_dir_path: ${{ inputs.dockerfile_dir_path }}
        ecr_repository: ${{ inputs.ecr_repository }}
        aws_region: ${{ inputs.cloud_region }}

    - shell: bash
      name: Set Language env
      run: |
        echo "LANGUAGE=python" >> "$GITHUB_ENV"
